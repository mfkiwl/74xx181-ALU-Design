$date
	Wed May 20 16:23:20 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ms
$end
$scope module adder_tb $end
$var wire 4 ! sum [3:0] $end
$var wire 4 " p [3:0] $end
$var wire 4 # g [3:0] $end
$var wire 1 $ cout $end
$var reg 4 % a [3:0] $end
$var reg 4 & b [3:0] $end
$var reg 1 ' cin $end
$scope module uut $end
$var wire 4 ( a [3:0] $end
$var wire 4 ) b [3:0] $end
$var wire 1 ' cin $end
$var wire 4 * sum [3:0] $end
$var wire 4 + p [3:0] $end
$var wire 4 , g [3:0] $end
$var wire 1 $ cout $end
$var wire 5 - c [4:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx -
bx ,
bx +
bx *
bx )
bx (
x'
bx &
bx %
x$
bx #
bx "
bx !
$end
#100
0$
b1101 !
b1101 *
b1101 "
b1101 +
b0 #
b0 ,
b0 -
0'
b1000 &
b1000 )
b101 %
b101 (
#200
b1110 !
b1110 *
b11 -
1'
b1100 &
b1100 )
b1 %
b1 (
#300
1$
b101 !
b101 *
b1001 "
b1001 +
b110 #
b110 ,
b11100 -
0'
b1110 &
b1110 )
b111 %
b111 (
#400
0$
b1000 !
b1000 *
b111 "
b111 +
b0 #
b0 ,
b1111 -
1'
b10 &
b10 )
b101 %
b101 (
#500
1$
b111 !
b111 *
b1000 #
b1000 ,
b10000 -
0'
b1000 &
b1000 )
b1111 %
b1111 (
#600
b111 !
b111 *
b1001 #
b1001 ,
b100 "
b100 +
b10011 -
1'
b1001 &
b1001 )
b1101 %
b1101 (
#700
